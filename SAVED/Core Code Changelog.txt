Changes to core code in the Resource and Service folders - UNFINISHED
This changelog is incomplete and will be updated soon.

Resource\core

cookies.php
added array of options to all cookies, as in this example

setcookie("myssession", $this->myssession, ['expires' => $Month, 'path' => '/', 'domain'=> $_SERVER['HTTP_HOST'], 'secure' => TRUE, 'httponly' => TRUE, 'SameSite' => 'Strict']);	 
Set user cookie to be hashed with sha512 instead of md5 and expanded database field to hold a larger cookie string.

session.php

Added security by setting cookie parameters, and for sessions to use only cookies


resource\utility

url.php

added url sanitize to constructor in case preg_match misses something or new versions of php add something to make the function more secure.

    public function __construct($url, $validate = FALSE, $parse = FALSE){
        $mysidia = Registry::get("mysidia");
        if($validate && !$this->isValid($url)){
            throw new URLException('The specified URL is invalid.');
        }
		$this->url = filter_var($url, FILTER_SANITIZE_URL);
        $this->url = (!preg_match(self::REGEX, $url)) ? $mysidia->path->getAbsolute() . $url : $url;
		if($parse) $this->parseURL();
    }

    Note - could put sanitizer in a function to wrap around url variable to also use in isValid function


Service\applicationservice

accountservice.pjp

Added session id regeneration to login

    public function login($username){
        $mysidia = Registry::get("mysidia");
	    if($mysidia->session->clientip != $_SERVER['REMOTE_ADDR']) throw new Exception('Your IP has changed since last session, please log in again.');
	    else{
            session_regenerate_id(true);  //  Session regenerate ID added - Kesstryl
	        $mysidia->cookies->setcookies($username);
            $mysidia->db->update("users", ["session" => $mysidia->cookies->getcookies("myssession")], "username = :username", ["username" => $username]);
		    if($this->mybbService->isEnabled()) $this->mybbService->login($username);
            return TRUE;
	    }	
    }


Cokkies

resource\core\cookies.php

    public function setcookies($username){
        $mysidia = Registry::get("mysidia");
        ob_start();
        $Month = 2592000 + time();
        $this->mysuid = $mysidia->db->select("users", ["uid"], "username = :username", ["username" => $username])->fetchColumn();
        setcookie("mysuid", $this->mysuid, ['expires' => $Month, 'path' => '/', 'domain'=> $_SERVER['HTTP_HOST'], 'secure' => TRUE, 'httponly' => TRUE, 'SameSite' => 'Strict']);
        $session = $mysidia->session->getid();
        $this->myssession = hash("sha256", $this->mysuid . $session);
        setcookie("myssession", $this->myssession, ['expires' => $Month, 'path' => '/', 'domain'=> $_SERVER['HTTP_HOST'], 'secure' => TRUE, 'httponly' => TRUE, 'SameSite' => 'Strict']);
        $this->mysactivity = time();
        setcookie("mysactivity", $this->mysactivity, ['expires' => $Month, 'path' => '/', 'domain'=> $_SERVER['HTTP_HOST'], 'secure' => TRUE, 'httponly' => TRUE, 'SameSite' => 'Strict']);
        $this->mysloginattempt = 0;
        setcookie("mysloginattempt", $this->mysloginattempt, ['expires' => $Month, 'path' => '/', 'domain'=> $_SERVER['HTTP_HOST'], 'secure' => TRUE, 'httponly' => TRUE, 'SameSite' => 'Strict']);
        ob_flush();
        return TRUE;

    }


more secure header

<!DOCTYPE html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="Content-Security-Policy"
        content="default-src 'self';
        img-src 'self';
        style-src 'self';
        style-src-attr 'self' 'unsafe-inline';
        style-src-elem 'self';
        font-src 'self';
        script-src 'self' https://ajax.googleapis.com;
        script-src-elem 'self' https://ajax.googleapis.com;
        script-src-attr 'self' https://ajax.googleapis.com;
        frame-src 'self';
        object-src 'self';
        form-action 'self';
        ">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{$browser_title}</title>
        {$header->loadFavicon("{$home}favicon.ico")}
        {$header->loadStyle("{$home}{$temp}{$theme}/style.css")}
        {$header->loadStyle("{$home}{$css}/menu.css")}
        {$header->loadStyles()}
        {$header->loadAdditionalStyle()}
        {$header->loadScript("https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js")}
        {$header->loadScripts()}
        {$header->loadAdditionalScript()}
    </head>


more secure .htaccess for production server


Options All -Indexes
<IfModule mod_headers.c>
Content-Security-Policy: frame-ancestors 'self'
X-Frame-Options: SAMEORIGIN
Header set Referrer-Policy "same-origin"
Strict-Transport-Security: max-age=63072000; includeSubDomains; preload
</IfModule>
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteRule (^\.|/\.) - [F]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{HTTP_HOST} ^www\.(.*) [NC]
RewriteCond %{HTTPS} off
RewriteCond %{REQUEST_URI} !\.(js|css|html|xml|json|gif|jpg|png|ico|webp)$ [NC]
RewriteRule ^ https://%1%{REQUEST_URI} [L,R=301]
RewriteRule ^(.*)$ index.php [QSA,L]
RewriteRule ^get/([0-9]+).gif$ /click/siggy/$1 [L]
</IfModule>
<files config.php>
order allow,deny
deny from all
</files>
<files config_forums.php>
order allow,deny
deny from all
</files>

for offline localhost dev server without SSL

Options All -Indexes
<IfModule mod_headers.c>
Content-Security-Policy: frame-ancestors 'self'
X-Frame-Options: SAMEORIGIN
Header set Referrer-Policy "same-origin"
Strict-Transport-Security: max-age=63072000; includeSubDomains; preload
</IfModule>
<IfModule mod_rewrite.c>
RewriteEngine On
RewriteRule (^\.|/\.) - [F]
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
# RewriteCond %{HTTP_HOST} ^www\.(.*) [NC]
# RewriteCond %{HTTPS} off
RewriteCond %{REQUEST_URI} !\.(js|css|html|xml|json|gif|jpg|png|ico|webp)$ [NC]
# RewriteRule ^ https://%1%{REQUEST_URI} [L,R=301]
RewriteRule ^(.*)$ index.php [QSA,L]
RewriteRule ^get/([0-9]+).gif$ /click/siggy/$1 [L]
</IfModule>
<files config.php>
order allow,deny
deny from all
</files>
<files config_forums.php>
order allow,deny
deny from all
</files>



error fix for using items
go to file /model/domainmodel/itemfunction.php file, line 22:

$whereclause = is_numeric($functioninfo) ? "ifid = :functioninfo" : "function = :functioninfo";

You need to replace it by:

$whereclause = is_numeric($functioninfo) ? "ifid = :functioninfo" : "`function` = :functioninfo";



